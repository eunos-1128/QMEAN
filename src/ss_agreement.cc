#include "ss_agreement.hh"
#include <stdexcept>
#include <string.h>

namespace qmean{

int PsiPredToIndex(char pp)
{
  if(pp == 'H') return 0;
  if(pp == 'E') return 1;
  if(pp == 'C') return 2;
  throw std::invalid_argument("Invalid PsiPred character!");
}
int DSSPToIndex(char dssp)
{
	// psi helix ('I') is handled as helix
	// since it occurs rarely

  if(dssp == 'H') return 0;
  if(dssp == 'E') return 1;
  if(dssp == 'C') return 2;
  if(dssp == 'G') return 3;
  if(dssp == 'B') return 4;
  if(dssp == 'S') return 5;
  if(dssp == 'T') return 6;
  if(dssp == 'I') return 0;
  throw std::invalid_argument("Invalid dssp character");
}

SSAgreement::SSAgreement()
{

  Real dp[]  = {0.32862958, 0.22216616, 0.19621195,  0.04055914,  0.01202182,  0.08496891, 0.11544244};

  Real pp[] =  {0.0067902 , 0.01017537, 0.01609428,
 				        0.00763329, 0.00717039, 0.02058283,
 				        0.00840521, 0.00788974, 0.02414494,
 				        0.00956565, 0.00862704, 0.02758781,
 				        0.01135505, 0.01011126, 0.03327142,
 				        0.01396252, 0.01229045, 0.04160611,
 				        0.01797086, 0.01533197, 0.05169749,
 				        0.02562082, 0.02042511, 0.06280955,
 				        0.04042258, 0.03124673, 0.07704262,
 				        0.21907656, 0.08808544, 0.07300671};

  Real condp[]={2.40359494e-03, 2.79724853e-03, 3.36016033e-03, 4.40391935e-03, 5.71246491e-03, 7.90128143e-03, 1.14390347e-02, 1.85517267e-02, 3.30810061e-02, 2.10415535e-01,
                6.46258656e-04, 3.91089068e-04, 3.69290661e-04, 3.96218105e-04, 3.12871254e-04, 3.13512384e-04, 2.83379292e-04, 2.07725997e-04, 1.91056626e-04, 1.01939609e-04,
                3.06780523e-03, 3.10370849e-03, 3.67367272e-03, 3.23001102e-03, 3.08832138e-03, 3.09601493e-03, 2.70684925e-03, 1.94134049e-03, 1.29315844e-03, 3.69290661e-04,

                4.93669807e-04, 5.76375528e-04, 5.30855325e-04, 4.73153659e-04, 4.34044752e-04, 3.51980161e-04, 3.91089068e-04, 2.91713977e-04, 3.08383347e-04, 2.39141348e-04,
                4.78731487e-03, 3.72496309e-03, 4.36416932e-03, 5.05979495e-03, 6.44976397e-03, 8.34558425e-03, 1.12954216e-02, 1.66052571e-02, 2.77564246e-02, 8.57062075e-02,
                3.34092645e-03, 4.71358496e-03, 4.75589951e-03, 4.88733109e-03, 5.20725477e-03, 5.39638800e-03, 5.38612993e-03, 5.02325057e-03, 3.86280596e-03, 1.40727951e-03,

                1.18224302e-03, 1.25981970e-03, 1.15980348e-03, 1.21558176e-03, 1.27456568e-03, 1.22263418e-03, 1.24507372e-03, 1.26302535e-03, 1.14313411e-03, 1.28546489e-03,
                2.72992992e-03, 1.84388878e-03, 1.90287271e-03, 1.95993325e-03, 2.12149791e-03, 2.34909892e-03, 2.43244577e-03, 2.52220392e-03, 2.24715931e-03, 1.71886851e-03,
                3.78330588e-03, 5.51179134e-03, 6.86393370e-03, 8.37507621e-03, 1.09126672e-02, 1.47363643e-02, 1.98487319e-02, 2.60446085e-02, 3.34829944e-02, 3.25732314e-02,

                7.66149895e-04, 9.12327448e-04, 1.07196872e-03, 1.13479943e-03, 1.45536424e-03, 1.62975149e-03, 2.01250587e-03, 2.37217959e-03, 2.79211949e-03, 3.59224926e-03,
                3.05177699e-04, 1.99391312e-04, 2.33371181e-04, 1.99391312e-04, 1.84004201e-04, 1.76310645e-04, 1.57717886e-04, 1.17967850e-04, 8.14234616e-05, 6.60363508e-05,
                1.50793686e-03, 1.59641275e-03, 1.79388067e-03, 2.14457858e-03, 2.53310313e-03, 2.82738162e-03, 2.95432528e-03, 2.79596627e-03, 2.02532847e-03, 9.20021003e-04,

                9.16815355e-05, 1.12197683e-04, 9.16815355e-05, 1.11556554e-04, 1.05786387e-04, 1.01298480e-04, 8.46291097e-05, 6.41129619e-05, 5.64194065e-05, 3.20564810e-05,
                2.22471978e-04, 1.38483998e-04, 1.57717886e-04, 1.67975960e-04, 2.01955830e-04, 2.16701811e-04, 3.35951920e-04, 3.04536569e-04, 3.60314846e-04, 2.15419552e-04,
                4.45585085e-04, 5.50730343e-04, 6.21895731e-04, 7.63585376e-04, 8.61037078e-04, 1.05722274e-03, 1.29444070e-03, 1.32585605e-03, 1.26943665e-03, 6.59081248e-04,

                5.60988417e-04, 6.12919916e-04, 6.01379583e-04, 5.97532805e-04, 5.86633601e-04, 5.64194065e-04, 5.94327157e-04, 5.63552935e-04, 5.43036787e-04, 4.99439973e-04,
                8.43726579e-04, 5.29573065e-04, 5.19314991e-04, 5.57141639e-04, 5.53294861e-04, 5.69964231e-04, 5.71246491e-04, 4.73794789e-04, 4.51355252e-04, 2.08367126e-04,
                1.54127560e-03, 2.13944954e-03, 2.75365171e-03, 3.53839437e-03, 4.62575020e-03, 6.42027201e-03, 9.01812922e-03, 1.22686564e-02, 1.70418664e-02, 1.46196787e-02,

                1.29187618e-03, 1.36240044e-03, 1.58936033e-03, 1.62911036e-03, 1.78618712e-03, 2.19138104e-03, 2.20420363e-03, 2.51451037e-03, 2.49848213e-03, 3.01266808e-03,
                6.40488489e-04, 3.43004346e-04, 3.43004346e-04, 2.86584940e-04, 2.87867199e-04, 3.19282550e-04, 2.55810718e-04, 1.93621145e-04, 1.59000146e-04, 6.86008692e-05,
                2.40744172e-03, 2.96714788e-03, 3.68200740e-03, 4.64883087e-03, 6.04328779e-03, 8.07246303e-03, 1.04888806e-02, 1.34098671e-02, 1.80670327e-02, 2.24581294e-02};


  memcpy(psipredP_, pp, sizeof(pp));
  memcpy(dsspP_, dp, sizeof(dp));
  memcpy(dsspcondP_, condp, sizeof(condp));
}

}//namespace
